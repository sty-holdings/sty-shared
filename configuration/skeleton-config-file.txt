NOTES:
        ==> DEVELOPERS REMEMBER: DO NOT PUT SENSITIVE INFORMATION IN THE LOG!
        ==> If you are not sure, ask the CTO/CSO if information is classified as sensitive.

        skeleton_config_filename  is where your version of the skeleton-config-file.json is located on the file system. If this
                                  omitted the default files will be used.
                                  **REMEMBER** that there is the skeleton-config-file.json and skeleton-config-file.txt files
                                               both must be replaced or the system will report an error.

        debug_mode_on             is either true or false and the value is case-insensitive. The default is false if this is omitted from the file.

        environment               is one of the following: local, development, production. The default is local and the value is NOT case-insensitive.

        log_directory             is the directory name relative to the working directory or the fully qualified name where logs will be written.
                                  Do not include a training '/'. The default is /var/log/nats-connect and the value is case-sensitive.
                                  The log file name uses the following format: {server_name}-date/time.

        max_threads               is the maxium number of goroutines that can run at time on the instance.

        pid_directory             is the directory name relative to the working directory or the fully qualified name where pid file will be written.
                                  Do not include a training '/'. The default is /var/log/nats-connect and the value is case-sensitive.
                                  The default is /var/run/nats-connect and the value is NOT case-insensitive.

        extensions                is an array of extensions that will be loaded by the server. The array object has two elements, extension_name and
                                  config_filename. They are both require string values. If there are no extension, the base server will be started.
                                  List of valid extension_name:
                                        internal_nats - this extension allows the server to accept NATS messages from clients. It also publishes messages
                                        to manage the server. Examples are 'turnDebugOn' for the server and Stripes 'retrieveBalance'.
